---
- name: check credentials
  ansible.builtin.include_tasks: check_variables.yml
  vars:
    required_vars:
      deployment_user: "{{ deployment_user }}"
      deployment_password: "{{ deployment_password }}"
  when: '"private" in node_app_repo.keys() and node_app_repo.private | bool'

- name: check node_gyp variables
  ansible.builtin.include_tasks: check_variables.yml
  vars:
    required_vars:
      python2_version: "{{ python2_version }}"
      visual_cpp_build_tools_version: "{{ visual_cpp_build_tools_version }}"
  when: use_node_gyp | bool

- name: install git
  chocolatey.chocolatey.win_chocolatey:
    name: git
    params: /GitOnlyOnPath
  notify: reboot

- name: install node
  chocolatey.chocolatey.win_chocolatey:
    name: nodejs
    version: "{{ node_version }}"
  notify: reboot

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: check node app path
  ansible.windows.win_stat:
    path: "{{ node_app_path }}"
  register: node_app_path_info

- name: check app version
  ansible.windows.win_command: "git --git-dir {{ node_app_path }}\\.git --work-tree {{ node_app_path }} describe"
  register: git_tag
  when: node_app_path_info.stat.exists
  changed_when: git_tag.stdout_lines[0] != node_app_tag

- name: set install node app flag
  ansible.builtin.set_fact:
    install_app: "{{ not (node_app_path_info.stat.exists | bool) or git_tag.stdout_lines[0] != node_app_tag }}"

- name: check app process is running
  ansible.windows.win_shell: "Get-Process -Name {{ node_app_process }}"
  register: app_process_running
  ignore_errors: true
  no_log: true
  changed_when: app_process_running.rc == 0

- name: stop running app processes
  ansible.windows.win_shell: "Stop-Process -Force -Name {{ node_app_process }}"
  when: app_process_running.rc == 0 and install_app | bool

- name: remove old version
  ansible.windows.win_file:
    path: "{{ node_app_path }}"
    state: absent
  when: install_app | bool

- name: clone source code from private repository
  ansible.windows.win_command: "git clone \
    --branch {{ node_app_tag }} \
    {{ node_app_repo.url | urlsplit('scheme') }}://\
    {{ deployment_user|urlencode }}:{{ deployment_password|urlencode }}@\
    {{ node_app_repo.url | urlsplit('hostname') }}{{ node_app_repo.url | urlsplit('path') }} \
    {{ node_app_path }}"
  when: 'install_app | bool and "private" in node_app_repo.keys() and node_app_repo.private | bool'
  notify:
    - reboot

- name: remove credentials from origin
  ansible.builtin.raw: git --git-dir={{ node_app_path }}/.git remote set-url origin {{ node_app_repo.url }}
  when: 'install_app | bool and "private" in node_app_repo.keys() and node_app_repo.private | bool'

- name: clone source code from public repository
  ansible.windows.win_command: git clone --branch {{ node_app_tag }} {{ node_app_repo.url }} {{ node_app_path }}
  when: 'install_app | bool and ("private" not in node_app_repo.keys() or not node_app_repo.private | bool)'
  notify:
    - reboot

- name: install python2
  chocolatey.chocolatey.win_chocolatey:
    name: python2
    version: "{{ python2_version }}"
    state: present
  when: use_node_gyp | bool

- name: install visual cpp build tools
  chocolatey.chocolatey.win_chocolatey:
    name: visualcppbuildtools
    version: "{{ visual_cpp_build_tools_version }}"
  when: use_node_gyp | bool

- name: configure node to use visual cpp build tools
  ansible.builtin.raw: npm config set msvs_version 2015 --global
  when: use_node_gyp | bool

- name: install dependencies
  ansible.windows.win_shell: cd {{ node_app_path }}; npm install --production
  when: install_app | bool
